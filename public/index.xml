<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Signal &amp; Syntax: Practical AI Coding with Tom Archer</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Signal &amp; Syntax: Practical AI Coding with Tom Archer</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Aug 2025 05:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Meeting Diet: An Optimization Approach to Your Calendar</title>
      <link>http://localhost:1313/posts/meeting-diet/</link>
      <pubDate>Thu, 28 Aug 2025 05:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/meeting-diet/</guid>
      <description>&lt;figure style=&#34;float: right; margin: 0 20px 10px 20px; width: 250px; text-align: center;&#34;&gt;&#xA;  &lt;img src=&#34;./meeting-diet.png&#34; alt=&#34;Professional woman pausing outside a conference room labeled &#39;Meeting in Progress&#39;, deciding whether to attend&#34; width=&#34;250&#34; style=&#34;display: block; margin: 0 auto;&#34;&gt;&#xA;  &lt;figcaption style=&#34;font-size: 0.9em; color: #555; margin-top: 5px;&#34;&gt;&#xA;    &lt;em&gt;If you don&#39;t optimize your schedule, your schedule will optimize you. Badly&lt;/em&gt;&#xA;  &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;Every week your calendar fills with more meeting invites than you can reasonably handle. Which ones are worth the time and energy, and which should you politely decline? What if there was a way to &lt;em&gt;quantify&lt;/em&gt; that choice?&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;Your calendar is a knapsack. Every meeting takes space, but only some add enough value to justify carrying them.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;strong&gt;The good news: math can help.&lt;/strong&gt; By modeling your schedule as a &lt;a href=&#34;https://en.wikipedia.org/wiki/Knapsack_problem#Multi-dimensional_knapsack_problem&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&#xD;&#xA;  &lt;strong&gt;0/1 knapsack problem with two constraints&lt;/strong&gt;&#xD;&#xA;&lt;/a&gt;&#xD;&#xA;, you can treat meetings like items with value, time cost, and energy cost. Classic optimization techniques then help decide which meetings to attend. In this post, we&amp;rsquo;ll walk through framing the problem, prompting AI to scaffold the code, and running a simulation to visualize your optimal &amp;ldquo;meeting diet.&amp;rdquo;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python Tip of the Week: Using Dispatch Tables for Cleaner Validation</title>
      <link>http://localhost:1313/posts/ptow-dispatch-maps/</link>
      <pubDate>Fri, 22 Aug 2025 10:38:20 -0700</pubDate>
      <guid>http://localhost:1313/posts/ptow-dispatch-maps/</guid>
      <description>&lt;figure style=&#34;float: right; margin: 0 20px 10px 20px; width: 250px; text-align: center;&#34;&gt;&#xA;  &lt;img src=&#34;./ptow-trans.png&#34; alt=&#34;Python Tip of the Week logo: Python Post-it note on monitor&#34; width=&#34;250&#34; style=&#34;display: block; margin: 0 auto;&#34;&gt;&#xA;  &lt;figcaption style=&#34;font-size: 0.9em; color: #555; margin-top: 5px;&#34;&gt;&#xA;    &lt;em&gt;Tips and techniques to improve your Python skills&lt;/em&gt;&#xA;  &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s be honest: argument validation code is rarely the proudest part of anyone&amp;rsquo;s repo.&lt;/p&gt;&#xA;&lt;p&gt;Most of us start with the usual suspects:&lt;/p&gt;&#xA;&lt;p&gt;❌ The dreaded &lt;em&gt;inverted-V&lt;/em&gt; tower of &lt;code&gt;if/else&lt;/code&gt; statements&lt;br&gt;&#xA;❌ A graveyard of guard clauses scattered line after line&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;Using a dispatch table for validation rules means: one dictionary, one loop, infinite sanity.&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Both work fine… until they don&amp;rsquo;t. Then you&amp;rsquo;re left maintaining a wall of conditionals that feels like it was designed by a committee of goblins.&lt;/p&gt;&#xA;&lt;p&gt;There&amp;rsquo;s a better way: &lt;strong&gt;dispatch tables&lt;/strong&gt;!&lt;/p&gt;</description>
    </item>
    <item>
      <title>From Ice Shows to Algorithms: Cracking the Truck-Packing Problem</title>
      <link>http://localhost:1313/posts/three-d-packing/</link>
      <pubDate>Wed, 20 Aug 2025 09:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/three-d-packing/</guid>
      <description>&lt;figure style=&#34;float: right; margin: 0 20px 10px 20px; width: 250px; text-align: center;&#34;&gt;&#xD;&#xA;  &lt;img src=&#34;./three-d-packing.png&#34; alt=&#34;3D Bin Packing&#34; width=&#34;250&#34; style=&#34;display: block; margin: 0 auto;&#34;&gt;&#xD;&#xA;  &lt;figcaption style=&#34;font-size: 0.9em; color: #555; margin-top: 5px;&#34;&gt;&#xD;&#xA;    &lt;em&gt;How do you fit it all in?&lt;/em&gt;&#xD;&#xA;  &lt;/figcaption&gt;&#xD;&#xA;&lt;/figure&gt;&#xD;&#xA;&lt;p&gt;My first full-time programming job was for &lt;strong&gt;Holiday on Ice&lt;/strong&gt;, an international ice show. While I focused mainly on back office systems such as accounting, itinerary, and box office reporting, I knew that one of the biggest technical challenges faced by the show&amp;rsquo;s crew was efficiently loading trucks for the next city.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;Given the dimensions of a truck and a list of containers (with their dimensions and weight), in what order, position, and orientation should you pack the truck?&amp;rdquo;&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;One day, the controller asked me if I could code a system that took, as input, the trucks&amp;rsquo; &lt;strong&gt;3D dimensions&lt;/strong&gt; and the &lt;strong&gt;3D dimensions (and weight)&lt;/strong&gt; of every object to be packed. Back in the &lt;strong&gt;Turbo Pascal&lt;/strong&gt; era, exploring 3D packing was painful. Today, with &lt;strong&gt;Python&lt;/strong&gt; and &lt;strong&gt;AI-assisted scaffolding&lt;/strong&gt;, it&amp;rsquo;s surprisingly approachable.&lt;/p&gt;</description>
    </item>
    <item>
      <title>From Solow to ChatGPT: Why Total Factor Productivity Can&#39;t Keep Up With Generative AI</title>
      <link>http://localhost:1313/posts/tfp-chatgpt/</link>
      <pubDate>Tue, 19 Aug 2025 05:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/tfp-chatgpt/</guid>
      <description>&lt;figure style=&#34;float: right; margin: 0 20px 10px 20px; width: 250px; text-align: center;&#34;&gt;&#xA;  &lt;img src=&#34;./tfp-chatgpt.png&#34; alt=&#34;Factory floor on left, AI brain on right, symbolizing shift from industrial productivity to generative AI.&#34; width=&#34;250&#34; style=&#34;display: block; margin: 0 auto;&#34;&gt;&#xA;  &lt;figcaption style=&#34;font-size: 0.9em; color: #555; margin-top: 5px;&#34;&gt;&#xA;    &lt;em&gt;Our tools for measuring progress were built for factories, not for AI.&lt;/em&gt;&#xA;  &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;If ChatGPT can write code, summarize legal briefs, and help draft business strategies in seconds, why doesn&amp;rsquo;t that show up in our productivity statistics?&lt;/p&gt;&#xA;&lt;p&gt;Economists have long relied on a metric called &lt;strong&gt;Total Factor Productivity (TFP)&lt;/strong&gt; to measure technological progress. But in an era of free digital tools and generative AI, TFP looks more like a rearview mirror than a windshield. It tells us a lot about the past, but almost nothing about where the economy is headed.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;You can see the &lt;del&gt;computer age&lt;/del&gt; generative AI everywhere but in the productivity statistics.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;(Adapted from Robert Solow, 1987)&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;hr&gt;</description>
    </item>
    <item>
      <title>Should You Walk or Run in the Rain? The Puzzle That Sparked a Passion</title>
      <link>http://localhost:1313/posts/rain-paradox/</link>
      <pubDate>Mon, 18 Aug 2025 09:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/rain-paradox/</guid>
      <description>&lt;figure style=&#34;float: right; margin: 0 20px 10px 20px; width: 250px; text-align: center;&#34;&gt;&#xA;  &lt;img src=&#34;./rain-paradox.png&#34; alt=&#34;Rain Paradox: Walk or Run?&#34; width=&#34;250&#34; style=&#34;display: block; margin: 0 auto;&#34;&gt;&#xA;  &lt;figcaption style=&#34;font-size: 0.9em; color: #555; margin-top: 5px;&#34;&gt;&#xA;    &lt;em&gt;To walk or to run. That is the question.&lt;/em&gt;&#xA;  &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;Early in my programming career, I came across a coding challenge that stuck with me for many years:&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;If it&amp;rsquo;s raining, will you stay drier by walking or running through it?&amp;rdquo;&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;At the time, I didn&amp;rsquo;t have the skillset or tools to simulate the problem properly. It became one of the first exercises that nudged me toward a lifelong fascination with modeling the real world through code. The problem wasn&amp;rsquo;t about recursion or memory management. It was about &lt;strong&gt;getting wet&lt;/strong&gt;, and &lt;strong&gt;how fast you move through falling rain&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>About Signal &amp; Syntax</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/about/</guid>
      <description>&lt;p&gt;For years, coding blogs followed a familiar pattern: a polished tutorial, fully working code, neat explanations. That style has its place , but today’s developer reality looks different. We live in an era of &lt;strong&gt;vibe coding&lt;/strong&gt;, where AI is part of the toolkit from the first sketch of an idea.&lt;/p&gt;&#xA;&lt;p&gt;At Signal &amp;amp; Syntax, I explore that new style:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Prompt → Output → Fix → Learn&lt;/strong&gt;&#xA;Posts aren’t static tutorials — they’re walkthroughs of how I use AI to explore solutions, refine them, and extract lessons along the way.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;AI as a Force Multiplier&lt;/strong&gt;&#xA;I use modern LLMs to accelerate analysis, drafting, and prototyping — never as a substitute for human judgment.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Domain Knowledge First&lt;/strong&gt;&#xA;Real results come from understanding systems, users, and constraints — then encoding that context into prompts, tools, and evaluations.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Creativity with Constraints&lt;/strong&gt;&#xA;Every limitation is a design input. I model, simulate, and iterate with checkpoints to keep progress measurable.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Repeatability&lt;/strong&gt;&#xA;I favor reproducible workflows, versioned prompts, and test artifacts so insights can be shared, debugged, and built upon.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This lens shapes the posts you&amp;rsquo;ll find here: hands-on guides, simulations,&#xA;annotated prompts, and tools that turn insight into working software.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Behind the Code: Tom&#39;s Story</title>
      <link>http://localhost:1313/bio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/bio/</guid>
      <description>&lt;div class=&#34;about-bio&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div class=&#34;bio-text&#34;&gt;&#xD;&#xA;     &lt;p&gt;Tom Archer is a seasoned technical lead and engineering manager, as well as a software developer and technical author, with deep roots in Python, C++, Windows programming, and AI-driven automation. He has led teams and delivered software solutions for IBM, AT&amp;amp;T, Peachtree Software (Sage 500), and VeriSign. At Microsoft, Tom develops AI tools for technical documentation, drawing on decades of experience in both hands-on coding and guiding developer teams.&lt;/p&gt;&#xA;&lt;p&gt;Tom also helped build and run &lt;a href=&#34;https://codeguru.com&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&#xD;&#xA;  CodeGuru.com&#xD;&#xA;&lt;/a&gt;&#xD;&#xA;, once the world&amp;rsquo;s largest Windows developer communities. He has been recognized by Microsoft as a Visual C++ MVP and has written ten programming books and hundreds of online articles.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
