<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Signal &amp; Syntax: Practical AI Coding with Tom Archer</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Signal &amp; Syntax: Practical AI Coding with Tom Archer</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Aug 2025 20:39:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Should You Walk or Run in the Rain? The Puzzle That Sparked a Passion</title>
      <link>http://localhost:1313/posts/rain-paradox/</link>
      <pubDate>Fri, 15 Aug 2025 20:39:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/rain-paradox/</guid>
      <description>&lt;p&gt;Early in my programming career, I came across a programming problem that stuck with me for many years:&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;If it&amp;rsquo;s raining, will you stay drier by walking or running through it?&amp;rdquo;&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;At the time, I didn&amp;rsquo;t have the skills to simulate the problem properly. It became one of the first exercises that nudged me toward a lifelong fascination with modeling the real world through code. The problem wasn&amp;rsquo;t about recursion or memory management. It was about &lt;strong&gt;getting wet&lt;/strong&gt;, and &lt;strong&gt;how fast you move through falling rain&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A little about Tom</title>
      <link>http://localhost:1313/bio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/bio/</guid>
      <description>&lt;div class=&#34;about-bio&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div class=&#34;bio-text&#34;&gt;&#xD;&#xA;     &lt;p&gt;Tom Archer is a seasoned technical lead and engineering manager, as well as a software developer and technical author, with deep roots in Python, C++, Windows programming, and AI-driven automation. He has led teams and delivered software solutions for IBM, AT&amp;amp;T, Peachtree Software (Sage 500), and VeriSign. At Microsoft, Tom develops AI tools for technical documentation, drawing on decades of experience in both hands-on coding and guiding developer teams.&lt;/p&gt;&#xA;&lt;p&gt;Tom also helped build and run &lt;a href=&#34;https://codeguru.com&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;&#xD;&#xA;  CodeGuru.com&#xD;&#xA;&lt;/a&gt;&#xD;&#xA;, once the world&amp;rsquo;s largest Windows developer community. He has been recognized by Microsoft as a Visual C++ MVP and has written ten programming books and hundreds of online articles.&lt;/p&gt;</description>
    </item>
    <item>
      <title>About</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/about/</guid>
      <description>&lt;h2 id=&#34;what-this-blog-is-about&#34;&gt;What This Blog Is About&lt;/h2&gt;&#xA;&lt;p&gt;I combine &lt;strong&gt;AI&lt;/strong&gt;, &lt;strong&gt;domain expertise&lt;/strong&gt;, and &lt;strong&gt;creative problem-solving&lt;/strong&gt;&#xA;to build practical solutions.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;AI as a force multiplier:&lt;/strong&gt; I use modern LLMs to accelerate analysis,&#xA;drafting, and prototyping—never as a substitute for judgment.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Domain knowledge first:&lt;/strong&gt; Real results come from understanding the&#xA;problem space—systems, users, constraints—and encoding that into prompts,&#xA;tools, and evaluation.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Creativity with constraints:&lt;/strong&gt; I treat constraints as design inputs.&#xA;I model the problem, simulate where useful, and iterate with measurable&#xA;checkpoints.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Repeatability:&lt;/strong&gt; I favor reproducible workflows, versioned prompts,&#xA;and test artifacts so ideas are sharable and debuggable.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This lens shapes the posts you’ll find here: hands-on guides, simulations,&#xA;annotated prompts, and tools that turn insight into working software.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
