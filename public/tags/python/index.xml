<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Signal &amp; Syntax: Practical AI Coding with Tom Archer</title>
    <link>http://localhost:1313/tags/python/</link>
    <description>Recent content in Python on Signal &amp; Syntax: Practical AI Coding with Tom Archer</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Aug 2025 05:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Meeting Diet: Max Value Under Time &amp; Energy Budgets</title>
      <link>http://localhost:1313/posts/meeting-diet/</link>
      <pubDate>Thu, 28 Aug 2025 05:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/meeting-diet/</guid>
      <description>&lt;figure style=&#34;float: right; margin: 0 20px 10px 20px; width: 250px; text-align: center;&#34;&gt;&#xA;  &lt;img src=&#34;./meeting-diet.png&#34; alt=&#34;Professional woman pausing outside a conference room labeled &#39;Meeting in Progress&#39;, deciding whether to attend&#34; width=&#34;250&#34; style=&#34;display: block; margin: 0 auto;&#34;&gt;&#xA;  &lt;figcaption style=&#34;font-size: 0.9em; color: #555; margin-top: 5px;&#34;&gt;&#xA;    &lt;em&gt;Deciding which meetings are really worth your time? Hint: Not every invite deserves a &#39;yes&#39;.&lt;/em&gt;&#xA;  &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;Every week your calendar fills with more meeting invites than you can reasonably handle. Which ones are worth the time and energy, and which should you politely decline? What if there was a way to &lt;em&gt;quantify&lt;/em&gt; that choice?&lt;/p&gt;</description>
    </item>
    <item>
      <title>From Ice Shows to Algorithms: Cracking the Truck-Packing Problem</title>
      <link>http://localhost:1313/posts/three-d-packing/</link>
      <pubDate>Wed, 20 Aug 2025 09:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/three-d-packing/</guid>
      <description>&lt;figure style=&#34;float: right; margin: 0 20px 10px 20px; width: 250px; text-align: center;&#34;&gt;&#xD;&#xA;  &lt;img src=&#34;./three-d-packing.png&#34; alt=&#34;3D Bin Packing&#34; width=&#34;250&#34; style=&#34;display: block; margin: 0 auto;&#34;&gt;&#xD;&#xA;  &lt;figcaption style=&#34;font-size: 0.9em; color: #555; margin-top: 5px;&#34;&gt;&#xD;&#xA;    &lt;em&gt;How do you fit it all in?&lt;/em&gt;&#xD;&#xA;  &lt;/figcaption&gt;&#xD;&#xA;&lt;/figure&gt;&#xD;&#xA;&lt;p&gt;My first full-time programming job was for &lt;strong&gt;Holiday on Ice&lt;/strong&gt;, an international ice show. While I focused mainly on back office systems such as accounting, itinerary, and box office reporting, I knew that one of the biggest technical challenges faced by the show&amp;rsquo;s crew was efficiently loading trucks for the next city.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;Given the dimensions of a truck and a list of containers (with their dimensions and weight), in what order, position, and orientation should you pack the truck?&amp;rdquo;&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;One day, the controller asked me if I could code a system that took, as input, the trucks&amp;rsquo; &lt;strong&gt;3D dimensions&lt;/strong&gt; and the &lt;strong&gt;3D dimensions (and weight)&lt;/strong&gt; of every object to be packed. Back in the &lt;strong&gt;Turbo Pascal&lt;/strong&gt; era, exploring 3D packing was painful. Today, with &lt;strong&gt;Python&lt;/strong&gt; and &lt;strong&gt;AI-assisted scaffolding&lt;/strong&gt;, it&amp;rsquo;s surprisingly approachable.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Should You Walk or Run in the Rain? The Puzzle That Sparked a Passion</title>
      <link>http://localhost:1313/posts/rain-paradox/</link>
      <pubDate>Mon, 18 Aug 2025 09:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/rain-paradox/</guid>
      <description>&lt;figure style=&#34;float: right; margin: 0 20px 10px 20px; width: 250px; text-align: center;&#34;&gt;&#xA;  &lt;img src=&#34;./rain-paradox.png&#34; alt=&#34;Rain Paradox: Walk or Run?&#34; width=&#34;250&#34; style=&#34;display: block; margin: 0 auto;&#34;&gt;&#xA;  &lt;figcaption style=&#34;font-size: 0.9em; color: #555; margin-top: 5px;&#34;&gt;&#xA;    &lt;em&gt;To walk or to run. That is the question.&lt;/em&gt;&#xA;  &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;Early in my programming career, I came across a coding challenge that stuck with me for many years:&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;If it&amp;rsquo;s raining, will you stay drier by walking or running through it?&amp;rdquo;&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;At the time, I didn&amp;rsquo;t have the skillset or tools to simulate the problem properly. It became one of the first exercises that nudged me toward a lifelong fascination with modeling the real world through code. The problem wasn&amp;rsquo;t about recursion or memory management. It was about &lt;strong&gt;getting wet&lt;/strong&gt;, and &lt;strong&gt;how fast you move through falling rain&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
